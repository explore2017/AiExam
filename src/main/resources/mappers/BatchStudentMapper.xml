<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.explore.dao.BatchStudentMapper">
  <resultMap id="BaseResultMap" type="com.explore.pojo.BatchStudent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="batch_id" jdbcType="INTEGER" property="batchId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="score" jdbcType="DOUBLE" property="score" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="submit_time" jdbcType="TIMESTAMP" property="submitTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, batch_id, student_id, score, status, start_time, submit_time, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from batch_student
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="checkHasSelected" resultType="java.lang.Integer">
      select count(*) from batch_student where student_id = #{studentId} and batch_id = #{batchId}
    </select>
  <select id="getBatchSelelectedNumberByBatchId" resultType="java.lang.Integer">
    select count(*) from batch_student where batch_id = #{batchId}
  </select>
  <select id="checkHasEnroll" resultType="java.lang.Integer">
    select count(*) from batch_student
    inner join batch on batch.id = batch_student.batch_id
    where student_id = #{studentId} and exam_id = (select exam_id from batch where id = #{batchId})
  </select>
  <select id="selectByStudentId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from batch_student
    where student_id = #{studentId}
  </select>
  <select id="selectByBatchId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from batch_student
    where batch_id = #{batchId}
  </select>
    <select id="selectByStudentIdAndBatchId" resultType="com.explore.pojo.BatchStudent">
      select
      <include refid="Base_Column_List" />
      from batch_student
      where batch_id = #{batchId} and student_id = #{studentId}
    </select>
    <select id="checkCanStart" resultType="java.lang.Integer">
      select
      count(*)
      from batch_student
      where batch_id = #{batchId} and student_id = #{studentId} and `status` in (1,2)
    </select>
    <select id="selectAfterFinishedByStudentId" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from batch_student
      where student_id = #{studentId} and status in (3,4,5)
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from batch_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="cancel" parameterType="map">
    delete from batch_student
    where student_id = #{studentId} and batch_id = #{batchId}
   </delete>
  <insert id="insert" parameterType="com.explore.pojo.BatchStudent">
    insert into batch_student (id, batch_id, student_id, 
      score, status, start_time, 
      submit_time, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{batchId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, 
      #{score,jdbcType=DOUBLE}, #{status,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{submitTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.explore.pojo.BatchStudent">
    insert into batch_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="batchId != null">
        batch_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="submitTime != null">
        submit_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="batchId != null">
        #{batchId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        #{score,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null">
        #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.explore.pojo.BatchStudent">
    update batch_student
    <set>
      <if test="batchId != null">
        batch_id = #{batchId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=DOUBLE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null">
        submit_time = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.explore.pojo.BatchStudent">
    update batch_student
    set batch_id = #{batchId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      score = #{score,jdbcType=DOUBLE},
      status = #{status,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      submit_time = #{submitTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteByBatchId" >
    delete from batch_student
    where  batch_id = #{batchId}
  </delete>
  <select id="selectExamScore" resultType="com.explore.pojo.BatchStudent">
    select
      batch_student.*
    FROM
    batch_student
    INNER JOIN batch ON batch.exam_id =#{examId}
    WHERE
    batch_student.batch_id = batch.id AND
    batch_student.`status` >= 4
  </select>
  <select id="checkExamEnd" resultType="java.lang.Integer">
    SELECT
      count(*)
    FROM
      batch_student
        INNER JOIN batch ON batch.exam_id = #{examId}
    WHERE
      batch_student.batch_id = batch.id AND
      batch_student.`status` &lt;4 AND
      batch.end_time &lt; NOW()
  </select>
</mapper>